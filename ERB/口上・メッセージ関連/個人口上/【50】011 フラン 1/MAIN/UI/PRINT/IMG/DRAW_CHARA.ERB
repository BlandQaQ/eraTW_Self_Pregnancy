@k1011GalIDraw()
	#DIM inited
	#DIM index
	IF !inited
		;参数自动设定
		SIF K1011Config:GIAutoSetting
			CALL k10111GalIConfigInit()
		FOR index, 0, VARSIZE("K1011Gid")
			K1011Gid:index = k1011ApplyGid()
		NEXT
		inited = 1
	ENDIF
	;清空
	CBGCLEAR
	;背景
	CALL k1011GalIBG()
	;chara
	CALL k1011GalIDrawChara()
	;ui
	CALL k1011GalIDrawUi()

;绘制背景
@k1011GalIBG
	GDISPOSE K1011Gid:9
	GCREATE K1011Gid:9, CLIENTWIDTH(), CLIENTHEIGHT()
	GCLEAR K1011Gid:9, 0xff000000 + GETBGCOLOR()
	CBGSETG K1011Gid:9, 0, 0, -1
;GalImageinput
@k1011GalIInput
	#DIM choice
	WHILE 1
		CBGCLEAR
		;绘制问题
		CALL k1011GalIDraw()
		CALL k1011GalIDrawButton()
		;绘制按钮
		INPUTMOUSEKEY 15
		IF RESULT == 1 && RESULT:1 == 0x100000
			choice = k1011GalIChoiceButton()
			SIF choice != -1
				RETURN choice
		ENDIF
	WEND

;画按钮
@k1011GalIDrawButton(initFlag = 0)
	#DIM startX
	#DIM startY
	#DIM nowX
	#DIM nowY
	#DIM nameMax
	#DIM index
	#DIM initFlag
	#DIM darkPoint, 4
	#DIM buttonHeight
	#DIM width
	#DIM height
	#DIM fontWidth
	#DIM fontHeight
	#DIM mousePosX
	#DIM mousePosY
	#DIM choice
	;初始化
	IF initFlag
		VARSET darkPoint, 150
	ENDIF
	;统计按钮信息
	FOR nameMax, 0, 4
		SIF K1011GalChoiceList:nameMax == ""
			BREAK
	NEXT
	nameMax --
	SIF nameMax == 0
		THROW [芙兰口上ERROR]未设置按钮列表
	buttonHeight = SPRITEHEIGHT("flan按钮左") * K1011Config:GIUiSize
	;计算中心位置
	width = CLIENTWIDTH() / 2
	height = CLIENTHEIGHT() / 2
	;创建桌面
	GDISPOSE K1011Gid:0
	GCREATE K1011Gid:0, width + K1011Config:GIButtonWidth / 2, height + (buttonHeight * nameMax + K1011Config:GIButtonSpace * (nameMax - 1) / 2)
	;按钮亮度处理
	mousePosX = MOUSEX()
	mousePosY = height + (buttonHeight * nameMax + K1011Config:GIButtonSpace * (nameMax - 1) / 2) + MOUSEY()
	choice = k1011GalIChoiceButton()
	FOR index, 0, nameMax
		IF choice == index
			darkPoint:index -= 50
			SIF darkPoint:index < 0
				darkPoint:index = 0
		ELSE
			darkPoint:index += 20
			SIF darkPoint:index > 150
				darkPoint:index = 150
		ENDIF
	NEXT
	FOR index, 0, nameMax
		;底
		;创建桌面
		GDISPOSE K1011Gid:20
		GCREATE K1011Gid:20, K1011Config:GIButtonWidth - k1011SpriteW("flan按钮左") - k1011SpriteW("flan按钮右"), buttonHeight
		GCLEAR K1011Gid:20, 0xff7b0000
		GDRAWG K1011Gid:0, K1011Gid:20, width - K1011Config:GIButtonWidth / 2 + k1011SpriteW("flan按钮右"), 0 + (buttonHeight + K1011Config:GIButtonSpace) * index, K1011Config:GIButtonWidth - k1011SpriteW("flan按钮左") - k1011SpriteW("flan按钮右"), buttonHeight, 0, 0, K1011Config:GIButtonWidth - k1011SpriteW("flan按钮左") - k1011SpriteW("flan按钮右"), buttonHeight
		;两边
		GDRAWSPRITE K1011Gid:0, "flan按钮左", width - K1011Config:GIButtonWidth / 2, 0 + (buttonHeight + K1011Config:GIButtonSpace) * index, k1011SpriteW("flan按钮左"), k1011SpriteH("flan按钮左")
		GDRAWSPRITE K1011Gid:0, "flan按钮右", width + K1011Config:GIButtonWidth / 2 - k1011SpriteW("flan按钮右"), 0 + (buttonHeight + K1011Config:GIButtonSpace) * index, k1011SpriteW("flan按钮右"), k1011SpriteH("flan按钮右")
		;水晶
		GDRAWSPRITE K1011Gid:0, @"flan水晶{index * 2}", width - K1011Config:GIButtonWidth / 2, 12 * K1011Config:GIUiSize + (buttonHeight + K1011Config:GIButtonSpace) * index, k1011SpriteW(@"flan水晶{index * 2}"), k1011SpriteH(@"flan水晶{index * 2}")
		GDRAWSPRITE K1011Gid:0, @"flan水晶{index * 2 + 1}", width + K1011Config:GIButtonWidth / 2 - k1011SpriteW("flan按钮右") + 3 * K1011Config:GIUiSize, 12 * K1011Config:GIUiSize + (buttonHeight + K1011Config:GIButtonSpace) * index, k1011SpriteW(@"flan水晶{index * 2}"), k1011SpriteH(@"flan水晶{index * 2}")
		;阴影
		;左
		GDISPOSE K1011Gid:20
		GDISPOSE K1011Gid:21
		GDISPOSE K1011Gid:22
		GCREATE K1011Gid:20, k1011SpriteW("flan水晶阴影左"), k1011SpriteH("flan水晶阴影左")
		GDRAWSPRITE K1011Gid:20, "flan水晶阴影左", 0, 0, k1011SpriteW("flan水晶阴影左"), k1011SpriteH("flan水晶阴影左")
		GCREATE K1011Gid:21, k1011SpriteW("flan水晶阴影左"), k1011SpriteH("flan水晶阴影左")
		GCREATE K1011Gid:22, k1011SpriteW("flan水晶阴影左"), k1011SpriteH("flan水晶阴影左")
		GCLEAR K1011Gid:21, 0xffffff00 + darkPoint:index
		GDRAWGWITHMASK K1011Gid:22, K1011Gid:20, K1011Gid:21, 0, 0
		GDRAWG K1011Gid:0, K1011Gid:22, width - K1011Config:GIButtonWidth / 2, 12 * K1011Config:GIUiSize + (buttonHeight + K1011Config:GIButtonSpace) * index, k1011SpriteW("flan水晶阴影左"), k1011SpriteH("flan水晶阴影左"), 0, 0, k1011SpriteW("flan水晶阴影左"), k1011SpriteH("flan水晶阴影左")
		;右
		GDISPOSE K1011Gid:20
		GDISPOSE K1011Gid:21
		GDISPOSE K1011Gid:22
		GCREATE K1011Gid:20, k1011SpriteW("flan水晶阴影右"), k1011SpriteH("flan水晶阴影右")
		GDRAWSPRITE K1011Gid:20, "flan水晶阴影右", 0, 0, k1011SpriteW("flan水晶阴影右"), k1011SpriteH("flan水晶阴影右")
		GCREATE K1011Gid:21, k1011SpriteW("flan水晶阴影右"), k1011SpriteH("flan水晶阴影右")
		GCREATE K1011Gid:22, k1011SpriteW("flan水晶阴影右"), k1011SpriteH("flan水晶阴影右")
		GCLEAR K1011Gid:21, 0xffffff00 + darkPoint:index
		GDRAWGWITHMASK K1011Gid:22, K1011Gid:20, K1011Gid:21, 0, 0
		GDRAWG K1011Gid:0, K1011Gid:22, width + K1011Config:GIButtonWidth / 2 - k1011SpriteW("flan按钮右") + 3 * K1011Config:GIUiSize, 12 * K1011Config:GIUiSize + (buttonHeight + K1011Config:GIButtonSpace) * index, k1011SpriteW("flan水晶阴影右"), k1011SpriteH("flan水晶阴影右"), 0, 0, k1011SpriteW("flan水晶阴影左"), k1011SpriteH("flan水晶阴影左")
		;框
		GDRAWSPRITE K1011Gid:0, "flan横框", width - K1011Config:GIButtonWidth / 2 + k1011SpriteW("flan按钮右"), 0 + (buttonHeight + K1011Config:GIButtonSpace) * index, K1011Config:GIButtonWidth - k1011SpriteW("flan按钮左") - k1011SpriteW("flan按钮右"), k1011SpriteH("flan横框")
		GDRAWSPRITE K1011Gid:0, "flan横框", width - K1011Config:GIButtonWidth / 2 + k1011SpriteW("flan按钮右"), 0 + (buttonHeight + K1011Config:GIButtonSpace) * index + buttonHeight - k1011SpriteH("flan横框"), K1011Config:GIButtonWidth - k1011SpriteW("flan按钮左") - k1011SpriteW("flan按钮右"), k1011SpriteH("flan横框")
		;字
		GSETFONT K1011Gid:0, GETFONT(), K1011Config:GIButtonTextSize
		GSETPEN K1011Gid:0, 0xff000000 + color_mix(GETDEFCOLOR(), darkPoint:index, GETFOCUSCOLOR(), 150 - darkPoint:index), 0
		GGETTEXTSIZE K1011GalChoiceList:index, GGETFONT(K1011Gid:0), K1011Config:GIButtonTextSize
		fontWidth = RESULT:0
		fontHeight = RESULT:1
		GDRAWTEXT K1011Gid:0, K1011GalChoiceList:index, width - fontWidth / 2,  buttonHeight / 2 + (buttonHeight + K1011Config:GIButtonSpace) * index - fontHeight / 2
	NEXT
	CBGSETG K1011Gid:0, 0, 0, -11

;获取鼠标位置
@k1011GalIChoiceButton()
	#FUNCTION
	#DIM nameMax
	#DIM width
	#DIM height
	#DIM mousePosX
	#DIM mousePosY
	#DIM index
	#DIM buttonHeight
	;统计按钮信息
	FOR nameMax, 0, 4
		SIF K1011GalChoiceList:nameMax == ""
			BREAK
	NEXT
	nameMax --
	SIF nameMax == 0
		THROW [芙兰口上ERROR]未设置按钮列表
	buttonHeight = SPRITEHEIGHT("flan按钮左") * K1011Config:GIUiSize
	;计算中心位置
	width = CLIENTWIDTH() / 2
	height = CLIENTHEIGHT() / 2
	;鼠标坐标
	mousePosX = MOUSEX()
	mousePosY = height + (buttonHeight * nameMax + K1011Config:GIButtonSpace * (nameMax - 1) / 2) + MOUSEY()
	FOR index, 0, nameMax
		{
		SIF (mousePosX >= width - K1011Config:GIButtonWidth / 2 && mousePosX <= width + K1011Config:GIButtonWidth / 2) &&
			(mousePosY >= (buttonHeight + K1011Config:GIButtonSpace) * index) && mousePosY <= (buttonHeight + K1011Config:GIButtonSpace) * index + buttonHeight
		}
			RETURNF index
	NEXT
	RETURNF -1

;画人
@k1011GalIDrawChara()
	;旁白
	SIF K1011GalChara < 0
		RETURN
	;不是芙兰
	SIF k1011GetNo(K1011GalChara) != 1011
		RETURN
	;创建桌面
	GDISPOSE K1011Gid:1
	GCREATE K1011Gid:1, K1011Config:GICharaLeft + K1011Config:GICharaSize, K1011Config:GIHeight + K1011Config:GIBottle + K1011Config:GICharaSize + K1011Config:GICharaBottle
	;获取人的精灵图
	;三号大佬的图
	IF EXISTFUNCTION("i1011DrawMain")
		;调教ing
		IF K1011Training == 1
			SETVAR "I1011Mood", 0
			SETVAR "I1011Underwear", 0
			SETVAR "I1011Wear", 0
		ELSE
			SETVAR "I1011Mood", 0
			SETVAR "I1011Underwear", 1
			SETVAR "I1011Wear", 1
		ENDIF
		GDRAWSPRITE K1011Gid:1, i1011DrawMain(0), K1011Config:GICharaLeft, 0, K1011Config:GICharaSize, K1011Config:GICharaSize
	ELSE
		IF K1011Game == "YM"
			;调教ing
			IF K1011Training == 1
				GDRAWSPRITE K1011Gid:1, @"立ち絵_服_通常_1011", K1011Config:GICharaLeft, 0, K1011Config:GICharaSize, K1011Config:GICharaSize
			ELSE
				GDRAWSPRITE K1011Gid:1, @"立ち絵_裸_通常_1011", K1011Config:GICharaLeft, 0, K1011Config:GICharaSize, K1011Config:GICharaSize
			ENDIF
		ELSE
			GDRAWSPRITE K1011Gid:1, @"立絵_服_通常_50", K1011Config:GICharaLeft, 0, K1011Config:GICharaSize, K1011Config:GICharaSize
		ENDIF
	ENDIF
	CBGSETG K1011Gid:1, 0, 0, -9

;绘制ui
@k1011GalIDrawUi()
	#DIM index
	#DIM tmpH
	#DIM tmpW
	#DIM DYNAMIC line
	#DIM DYNAMIC textLong
	#DIMS char
	#DIMS colorList, 999
	;创建桌面
	GDISPOSE K1011Gid:2
	GCREATE K1011Gid:2, K1011Config:GIWidth + K1011Config:GILeft, K1011Config:GIBottle + K1011Config:GIHeight
	;背景
	GDISPOSE K1011Gid:20
	GCREATE K1011Gid:20, K1011Config:GIWidth - 14 * K1011Config:GIUiSize, K1011Config:GIHeight - 14 * K1011Config:GIUiSize
	GCLEAR K1011Gid:20, 0xff7b0000
	{
	GDRAWG K1011Gid:2, K1011Gid:20,
	K1011Config:GILeft + 7 * K1011Config:GIUiSize,
	7 * K1011Config:GIUiSize,
	K1011Config:GIWidth - 14 * K1011Config:GIUiSize,
	K1011Config:GIHeight - 14 * K1011Config:GIUiSize,
	0,
	0,
	K1011Config:GIWidth - 14 * K1011Config:GIUiSize,
	K1011Config:GIHeight - 14 * K1011Config:GIUiSize
	}
	
	;框
	GDRAWSPRITE K1011Gid:2, "flan左上角", K1011Config:GILeft, 0, 14 * K1011Config:GIUiSize, 14 * K1011Config:GIUiSize
	GDRAWSPRITE K1011Gid:2, "flan右上角", K1011Config:GIWidth + K1011Config:GILeft - 14 * K1011Config:GIUiSize, 0, 14 * K1011Config:GIUiSize, 14 * K1011Config:GIUiSize
	GDRAWSPRITE K1011Gid:2, "flan左下角", K1011Config:GILeft, 0 + K1011Config:GIHeight - 14 * K1011Config:GIUiSize, 14 * K1011Config:GIUiSize, 14 * K1011Config:GIUiSize
	GDRAWSPRITE K1011Gid:2, "flan右下角", K1011Config:GIWidth + K1011Config:GILeft - 14 * K1011Config:GIUiSize, 0 + K1011Config:GIHeight - 14 * K1011Config:GIUiSize, 14 * K1011Config:GIUiSize, 14 * K1011Config:GIUiSize
	;横框
	GDRAWSPRITE K1011Gid:2, "flan横框", K1011Config:GILeft + 14 * K1011Config:GIUiSize, 6 * K1011Config:GIUiSize, K1011Config:GIWidth - 28 * K1011Config:GIUiSize, k1011SpriteH("flan横框")
	GDRAWSPRITE K1011Gid:2, "flan横框", K1011Config:GILeft + 14 * K1011Config:GIUiSize, K1011Config:GIHeight - 8 * K1011Config:GIUiSize, K1011Config:GIWidth - 28 * K1011Config:GIUiSize, k1011SpriteH("flan横框")
	;竖框
	GDRAWSPRITE K1011Gid:2, "flan竖框", K1011Config:GILeft + 6 * K1011Config:GIUiSize, 14 * K1011Config:GIUiSize, k1011SpriteW("flan竖框"), K1011Config:GIHeight - 28 * K1011Config:GIUiSize
	GDRAWSPRITE K1011Gid:2, "flan竖框", K1011Config:GILeft + K1011Config:GIWidth - 8 * K1011Config:GIUiSize, 14 * K1011Config:GIUiSize, k1011SpriteW("flan竖框"), K1011Config:GIHeight - 28 * K1011Config:GIUiSize
	;LED
	GDRAWSPRITE K1011Gid:2, "flan水晶", K1011Config:GILeft + K1011Config:GIWidth - (14 + SPRITEWIDTH("flan水晶")) * K1011Config:GIUiSize, 0, SPRITEWIDTH("flan水晶") * K1011Config:GIUiSize, SPRITEHEIGHT("flan水晶") * K1011Config:GIUiSize
	;名字
	IF k1011GCharaName() != ""
		GSETFONT K1011Gid:2, GETFONT(), K1011Config:GINameSize
		GDRAWTEXT K1011Gid:2, k1011GCharaName(), K1011Config:GINameX + K1011Config:GILeft, K1011Config:GINameY
	ENDIF
	;文本
	;设置字体
	GSETFONT K1011Gid:2, GETFONT(), K1011Config:GITextSize
	;获取颜色list
	SPLIT K1011GalTextColor, "_", colorList
	FOR index, 0, STRLENSU(K1011GalText)
		char '= SUBSTRINGU(K1011GalText, index, 1)
		;换行
		IF char == "\n" || textLong * K1011Config:GITextSize / 2 >= K1011Config:GITextLong
			textLong = 0
			line ++
			;主动换行
			SIF char == "\n"
				CONTINUE
		ENDIF
		;设置颜色
		GSETPEN K1011Gid:2, 0xff000000 + TOINT(colorList:index), 0
		GDRAWTEXT K1011Gid:2, char, K1011Config:GITextX + K1011Config:GILeft + textLong * K1011Config:GITextSize / 2, K1011Config:GITextY + line * K1011Config:GITextHeight
		;长度记录
		textLong += STRLENS(char)
	NEXT
	;输出
	CBGSETG K1011Gid:2, 0, 0, -10
